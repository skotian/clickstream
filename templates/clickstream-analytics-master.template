---
AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  Template creates new VPC and enables you to deploy a Clickstream Analytics Solution that Integrates Amazon Kinesis Firehose, Kinesis Analytics, S3, Redshift and Amazon Elasticsearch. You will be billed for the AWS resources used if you create a stack from this template.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - AvailabilityZones
          - VPCCIDR
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
      - Label:
          default: Bastion host configuration
        Parameters:
          - KeyPairName
          - BastionInstanceType
          - RemoteAccessCIDR
          - BastionAMIOS
      - Label:
          default: Web Server configuration
        Parameters:
          - AppInstanceType
          - AppKeyPairName
      - Label:
          default: SNS configuration
        Parameters:
          - OperatorEMail
      - Label:
          default: Encrypt Data configuration
        Parameters:
          - EncryptData
      - Label:
          default: Amazon Elasticsearch configuration
        Parameters:
          - ESVersion
          - ESClusterInstanceCount
          - ZoneAwarenessEnabled
          - ESInstanceType
          - DedicatedMasterEnabled
          - DedicatedMasterType
          - DedicatedMasterCount
          - IOPS
          - VolumeSize
          - AutomatedSnapshotStartHour
          - VolumeType
      - Label:
          default: Amazon Kinesis Firehose Elasticsearch Destination configuration
        Parameters:
          - ESIndex
          - ESType
          - ESIndexRotation
          - ESBufferInterval
          - ESBufferSize
      - Label:
          default: Amazon Redshift cluster configuration
        Parameters:
          - DatabaseName
          - ClusterType
          - NumberOfNodes
          - NodeType
          - RedshiftPortNumber
          - isDemo
      - Label:
          default: Amazon Kinesis Firehose Redshift Destination configuration
        Parameters:
          - MasterUser
          - MasterUserPassword
          - RedshiftTableName
          - RedshiftColumns
          - RedshiftBufferInterval
          - RedshiftBufferSize
      - Label:
          default: Amazon Kinesis Firehose S3 Destination configuration
        Parameters:
          - S3BufferInterval
          - S3BufferSize
          - S3DestinationPrefix
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
    ParameterLabels:
      ESClusterInstanceCount:
        default: Number of instances to run in cluster
      ZoneAwarenessEnabled:
        default: Enable Zone Awareness
      ESInstanceType:
        default: Cluster Instance Type
      DedicatedMasterEnabled:
        default: Deidcated Master for cluster
      DedicatedMasterType:
        default: Instance Type for Dedicated Master
      DedicatedMasterCount:
        default: Number of Dedicated Masters in a cluster
      IOPS:
        default: Provisioned IOPS
      VolumeSize:
        default: EBS Volume Size
      AutomatedSnapshotStartHour:
        default: Everyday Snapshot Time
      VolumeType:
        default: EBS Volume Type
      VPCCIDR:
        default: VPC CIDR
      PrivateSubnet1CIDR:
        default: Private Subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private Subnet 2 CIDR
      PublicSubnet1CIDR:
        default: Public Subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public Subnet 2 CIDR
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
      OperatorEMail:
        default: Email ID to recieve alert notifications
      BastionInstanceType:
        default: Bastion Instance Type
      BastionAMIOS:
        default: Bastion AMI Operating System
      AppInstanceType:
        default: Application Instance Type
      KeyPairName:
        default: Bastion Host Key pair name
      AppKeyPairName:
        default: Application Host Key pair name
      RemoteAccessCIDR:
        default: Allowed CIDR for external access to Bastion
      DatabaseName:
        default: Database Name
      ClusterType:
        default: Cluster Type
      NumberOfNodes:
        default: Number of Nodes
      NodeType: 
        default: Node Type
      AvailabilityZones:
        default: Availability Zones
      ApplicationName:
        default: Application name
      EncryptData:
        default: Encrypt Data at Rest
      MasterUser:
        default: Master user name
      MasterUserPassword:
        default: Master user password
      RedshiftTableName:
        default: Table name
      RedshiftColumns:
        default: Column Pattern
      RedshiftBufferInterval:
        default: Buffer Interval
      RedshiftBufferSize:
        default: Buffer Size
      RedshiftPortNumber:
        default: Redshift Port Number
      isDemo:
        default: Include Demo Data
      ESIndex:
        default: Index Name
      ESType:
        default: Type Name
      ESVersion:
        default: Amazon ES version
      ESIndexRotation:
        default: Index Rotation
      ESBufferInterval:
        default: Buffer Interval
      ESBufferSize:
        default: Buffer Size
      S3BufferInterval:
        default: Buffer Interval
      S3BufferSize:
        default: Buffer Size
      S3DestinationPrefix:
        default: Destination Prefix
Parameters:
  ESClusterInstanceCount:
    Type: String
    Description: Number of data nodes for cluster. Select even number of data nodes if Zone awareness is enabled
    Default: 1
  ZoneAwarenessEnabled:
    Type: String
    Description: Distribute nodes across two Availability Zones in the same region
    AllowedValues:
      - true
      - false
    Default: false
  ESInstanceType:
    Type: String
    Description: Instance type for Elasticsearch Nodes
    AllowedValues:
      - t2.small.elasticsearch
      - t2.medium.elasticsearch
      - c4.large.elasticsearch
      - c4.xlarge.elasticsearch
      - c4.2xlarge.elasticsearch
      - c4.4xlarge.elasticsearch
      - c4.8xlarge.elasticsearch
      - m3.medium.elasticsearch
      - m3.large.elasticsearch
      - m3.xlarge.elasticsearch
      - m3.2xlarge.elasticsearch
      - m4.large.elasticsearch
      - m4.xlarge.elasticsearch
      - m4.2xlarge.elasticsearch
      - m4.4xlarge.elasticsearch
      - m4.10xlarge.elasticsearch
      - r3.large.elasticsearch
      - r3.xlarge.elasticsearch
      - r3.2xlarge.elasticsearch
      - r3.4xlarge.elasticsearch
      - r3.8xlarge.elasticsearch
      - r4.large.elasticsearch
      - r4.xlarge.elasticsearch
      - r4.2xlarge.elasticsearch
      - r4.4xlarge.elasticsearch
      - r4.8xlarge.elasticsearch
      - r4.16xlarge.elasticsearch
      - i2.xlarge.elasticsearch
      - i2.2xlarge.elasticsearch      
      - i3.large.elasticsearch
      - i3.xlarge.elasticsearch
      - i3.2xlarge.elasticsearch
      - i3.4xlarge.elasticsearch
      - i3.8xlarge.elasticsearch
      - i3.16xlarge.elasticsearch
    Default: m4.large.elasticsearch
  DedicatedMasterEnabled:
    Type: String
    Description: Three dedicated master nodes are recommended for production Elasticsearch domain
    AllowedValues:
      - true
      - false
    Default: false
  DedicatedMasterType:
    Type: String
    Description: Master instance type for Elasticsearch Nodes
    AllowedValues:
      - t2.small.elasticsearch
      - t2.medium.elasticsearch
      - c4.large.elasticsearch
      - c4.xlarge.elasticsearch
      - c4.2xlarge.elasticsearch
      - c4.4xlarge.elasticsearch
      - c4.8xlarge.elasticsearch
      - m3.medium.elasticsearch
      - m3.large.elasticsearch
      - m3.xlarge.elasticsearch
      - m3.2xlarge.elasticsearch
      - m4.large.elasticsearch
      - m4.xlarge.elasticsearch
      - m4.2xlarge.elasticsearch
      - m4.4xlarge.elasticsearch
      - m4.10xlarge.elasticsearch
      - r3.large.elasticsearch
      - r3.xlarge.elasticsearch
      - r3.2xlarge.elasticsearch
      - r3.4xlarge.elasticsearch
      - r3.8xlarge.elasticsearch
      - r4.large.elasticsearch
      - r4.xlarge.elasticsearch
      - r4.2xlarge.elasticsearch
      - r4.4xlarge.elasticsearch
      - r4.8xlarge.elasticsearch
      - r4.16xlarge.elasticsearch
      - i2.xlarge.elasticsearch
      - i2.2xlarge.elasticsearch      
      - i3.large.elasticsearch
      - i3.xlarge.elasticsearch
      - i3.2xlarge.elasticsearch
      - i3.4xlarge.elasticsearch
      - i3.8xlarge.elasticsearch
      - i3.16xlarge.elasticsearch
    Default: m4.large.elasticsearch
  DedicatedMasterCount:
    Type: String
    Description: Number of Dedicated Masters to run. Leave this field to default if DedicatedMasterForCluster Parameter is set to True
    AllowedValues:
      - 0
      - 3
      - 5
    Default: 0
  IOPS:
    Type: String
    Description: The provisioned IOPS value must be an integer between 1000 and 16000
    Default: 0
  VolumeSize:
    Type: String
    Description: IOPS Total cluster size in GB (EBS volume size x Instance count)
    Default: 10
  AutomatedSnapshotStartHour:
    Type: String
    Description: Schedule automated snapshots Value should be between 0-23
    Default: 0
  VolumeType:
    Type: String
    Description: Type of volume used for instances in a cluster
    AllowedValues:
      - standard
      - gp2
      - io1
    Default: gp2
  VPCCIDR:
    Type: String
    Description: CIDR range for your VPC 
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    Default: 10.0.0.0/16
  PrivateSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
    Description: CIDR block for private subnet 1 located in Availability Zone 1
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.32.0/19
    Description: CIDR block for private subnet 2 located in Availability Zone 2
    Type: String
  PublicSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.128.0/20
    Description: CIDR block for the public (DMZ) subnet 1 located in Availability
      Zone 1
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.144.0/20
    Description: CIDR block for the public (DMZ) subnet 2 located in Availability
      Zone 2
    Type: String
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: "S3 bucket where the Quick Start templates and scripts are installed.\
      \ Use this parameter to specify the S3 bucket name you\u2019ve created for your\
      \ copy of Quick Start assets, if you decide to customize or extend the Quick\
      \ Start for your own use. The bucket name can include numbers, lowercase letters,\
      \ uppercase letters, and hyphens, but should not start or end with a hyphen."
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/). It cannot start or end
      with forward slash (/) because they are automatically appended.
    Default: quickstart-examples/
    Description: S3 key prefix used to simulate a folder for your copy of Quick Start
      assets, if you decide to customize or extend the Quick Start for your own use.
      This prefix can include numbers, lowercase letters, uppercase letters, hyphens,
      and forward slashes.
    Type: String
  OperatorEMail:
    Description: Email address to notify scaling operations
    Type: String
    AllowedPattern: ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
    ConstraintDescription: Must be a valid email address.
  BastionAMIOS:
    AllowedValues:
      - Amazon-Linux-HVM
    Default: Amazon-Linux-HVM
    Description: The Linux distribution for the AMI to be used for the bastion instances
    Type: String
  BastionInstanceType:
    Description: Bastion Host EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - c1.medium
    - c1.xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - g2.2xlarge
    - g2.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - hi1.4xlarge
    - hs1.8xlarge
    - cr1.8xlarge
    - cc2.8xlarge
    - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.   
  AppInstanceType:
    Description: App Server EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - c1.medium
    - c1.xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - g2.2xlarge
    - g2.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - hi1.4xlarge
    - hs1.8xlarge
    - cr1.8xlarge
    - cc2.8xlarge
    - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  KeyPairName:
    Description: Public/private key pairs allow you to securely connect to your bastion instance after it launches. If you do not have one in this region, please create it before continuing
    Type: AWS::EC2::KeyPair::KeyName
  AppKeyPairName:
    Description: Public/private key pairs allow you to securely connect to your application instance after it launches. If you do not have one in this region, please create it before continuing
    Type: AWS::EC2::KeyPair::KeyName
  RemoteAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Description: A CIDR block that’s allowed external access to the Bastion. We recommend that you use a constrained CIDR range to reduce the potential of inbound attacks from unknown IP addresses.(see http://checkip.dyndns.org/)
    Type: String
  AvailabilityZones:
    Description: List of Availability Zones to use for the subnets in the VPC. Only
      two Availability Zones are used for this deployment, and the logical order of
      your selections is preserved.
    Type: List<AWS::EC2::AvailabilityZone::Name>
  S3DestinationPrefix:
    Description: Name of prefix where the aggregated data will be stored.
    Type: String
    Default: AggregatedData
  S3BufferInterval:
    Description: Number of seconds to buffer data before delivering to S3 (60 to 900).
    Type: Number
    Default: 300
    MinValue: 60
    MaxValue: 900
  S3BufferSize:
    Description: Number of MB of data to buffer before delivering to S3 (1 to 128).
    Type: Number
    Default: 5
    MinValue: 1
    MaxValue: 128
  EncryptData:
    Description: Set to YES to encrypt the data as it leaves your Kinesis Analytics application.
    Type: String
    AllowedValues:
      - 'yes'
      - 'no'
    Default: 'no'
  ESVersion:
    Description: User defined Elasticsearch version
    Type: String
    Default: "6.3"
    AllowedValues:
      - 6.3
      - 6.2
      - 6.0
      - 5.6
      - 5.3
      - 5.1
      - 2.3
      - 1.5
  ESIndex:
    Description: Index name of the Amazon Elasticsearch Domain.
    Type: String
    Default: test
  ESType:
    Description: Name of the Amazon Elasticsearch type.
    Type: String
    Default: test
  ESIndexRotation:
    Description: Frequency at which the Amazon Elasticsearch index will be rotated.
    Type: String
    AllowedValues:
      - NoRotation
      - OneHour
      - OneDay
      - OneWeek
      - OneMonth
    Default: NoRotation
  ESBufferInterval:
    Description: Number of seconds to buffer data before delivering to S3 to be copied
      to Elasticsearch (60 to 900).
    Type: Number
    Default: 300
    MinValue: 60
    MaxValue: 900
  ESBufferSize:
    Description: Number of MB of data to buffer before delivering to S3 to be copied
      to Elasticsearch (1 to 100).
    Type: Number
    Default: 5
    MinValue: 1
    MaxValue: 100
  DatabaseName:
    Description: The name of the first database to be created when the Redshift cluster is
      created
    Type: String
    Default: dev
    AllowedPattern: "([a-z]|[0-9])+"
  ClusterType:
    Description: The type of Redshift cluster
    Type: String
    Default: single-node
    AllowedValues:
    - single-node
    - multi-node
  NumberOfNodes:
    Description: The number of compute nodes in the Redshift cluster. For multi-node clusters,
      the NumberOfNodes parameter must be greater than 1
    Type: Number
    Default: '1'
  NodeType:
    Description: The type of Redshift node to be provisioned
    Type: String
    Default: dc2.large
    AllowedValues:
    - ds2.xlarge
    - ds2.8xlarge
    - dc1.large
    - dc1.8xlarge
    - dc2.large
    - dc2.8xlarge
  MasterUserPassword:
    Description: Master user password for Redshift cluster
    NoEcho: 'true'
    Type: String
    Default: Test!123
  MasterUser:
    Description: Name of the master user of the Redshift cluster
    Type: String
    Default: test
  RedshiftBufferInterval:
    Description: Number of seconds to buffer data before delivering to S3 (60 to 900).
    Type: Number
    Default: 300
    MinValue: 60
    MaxValue: 900
  RedshiftBufferSize:
    Description: Number of MB of data to buffer before delivering to S3 (1 to 128).
    Type: Number
    Default: 5
    MinValue: 1
    MaxValue: 128
  RedshiftTableName:
    Description: Name of table in Redshift cluster. Do not change it.
    Type: String
    Default: apache_logs.access_logs
  RedshiftColumns:
    Description: Comma-separated list of the columns in the destination Redshift table.
    Type: String
  RedshiftPortNumber:
    Description: Redshift publicly accessible port number
    Type: String
    Default: '5439'
  isDemo:
    Description: Set to NO if you do not want to ingest Demo data into Redshift.
    Type: String
    AllowedValues:
      - 'yes'
      - 'no'
    Default: 'yes'
Mappings:
  InstanceType2Arch:
    t1.micro:
      Arch: PV64
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.large:
      Arch: HVM64
    m1.small:
      Arch: PV64
    m1.medium:
      Arch: PV64
    m1.large:
      Arch: PV64
    m1.xlarge:
      Arch: PV64
    m2.xlarge:
      Arch: PV64
    m2.2xlarge:
      Arch: PV64
    m2.4xlarge:
      Arch: PV64
    m3.medium:
      Arch: HVM64
    m3.large:
      Arch: HVM64
    m3.xlarge:
      Arch: HVM64
    m3.2xlarge:
      Arch: HVM64
    m4.large:
      Arch: HVM64
    m4.xlarge:
      Arch: HVM64
    m4.2xlarge:
      Arch: HVM64
    m4.4xlarge:
      Arch: HVM64
    m4.10xlarge:
      Arch: HVM64
    c1.medium:
      Arch: PV64
    c1.xlarge:
      Arch: PV64
    c3.large:
      Arch: HVM64
    c3.xlarge:
      Arch: HVM64
    c3.2xlarge:
      Arch: HVM64
    c3.4xlarge:
      Arch: HVM64
    c3.8xlarge:
      Arch: HVM64
    c4.large:
      Arch: HVM64
    c4.xlarge:
      Arch: HVM64
    c4.2xlarge:
      Arch: HVM64
    c4.4xlarge:
      Arch: HVM64
    c4.8xlarge:
      Arch: HVM64
    g2.2xlarge:
      Arch: HVMG2
    g2.8xlarge:
      Arch: HVMG2
    r3.large:
      Arch: HVM64
    r3.xlarge:
      Arch: HVM64
    r3.2xlarge:
      Arch: HVM64
    r3.4xlarge:
      Arch: HVM64
    r3.8xlarge:
      Arch: HVM64
    i2.xlarge:
      Arch: HVM64
    i2.2xlarge:
      Arch: HVM64
    i2.4xlarge:
      Arch: HVM64
    i2.8xlarge:
      Arch: HVM64
    d2.xlarge:
      Arch: HVM64
    d2.2xlarge:
      Arch: HVM64
    d2.4xlarge:
      Arch: HVM64
    d2.8xlarge:
      Arch: HVM64
    hi1.4xlarge:
      Arch: HVM64
    hs1.8xlarge:
      Arch: HVM64
    cr1.8xlarge:
      Arch: HVM64
    cc2.8xlarge:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t1.micro:
      Arch: NATPV64
    t2.nano:
      Arch: NATHVM64
    t2.micro:
      Arch: NATHVM64
    t2.small:
      Arch: NATHVM64
    t2.medium:
      Arch: NATHVM64
    t2.large:
      Arch: NATHVM64
    m1.small:
      Arch: NATPV64
    m1.medium:
      Arch: NATPV64
    m1.large:
      Arch: NATPV64
    m1.xlarge:
      Arch: NATPV64
    m2.xlarge:
      Arch: NATPV64
    m2.2xlarge:
      Arch: NATPV64
    m2.4xlarge:
      Arch: NATPV64
    m3.medium:
      Arch: NATHVM64
    m3.large:
      Arch: NATHVM64
    m3.xlarge:
      Arch: NATHVM64
    m3.2xlarge:
      Arch: NATHVM64
    m4.large:
      Arch: NATHVM64
    m4.xlarge:
      Arch: NATHVM64
    m4.2xlarge:
      Arch: NATHVM64
    m4.4xlarge:
      Arch: NATHVM64
    m4.10xlarge:
      Arch: NATHVM64
    c1.medium:
      Arch: NATPV64
    c1.xlarge:
      Arch: NATPV64
    c3.large:
      Arch: NATHVM64
    c3.xlarge:
      Arch: NATHVM64
    c3.2xlarge:
      Arch: NATHVM64
    c3.4xlarge:
      Arch: NATHVM64
    c3.8xlarge:
      Arch: NATHVM64
    c4.large:
      Arch: NATHVM64
    c4.xlarge:
      Arch: NATHVM64
    c4.2xlarge:
      Arch: NATHVM64
    c4.4xlarge:
      Arch: NATHVM64
    c4.8xlarge:
      Arch: NATHVM64
    g2.2xlarge:
      Arch: NATHVMG2
    g2.8xlarge:
      Arch: NATHVMG2
    r3.large:
      Arch: NATHVM64
    r3.xlarge:
      Arch: NATHVM64
    r3.2xlarge:
      Arch: NATHVM64
    r3.4xlarge:
      Arch: NATHVM64
    r3.8xlarge:
      Arch: NATHVM64
    i2.xlarge:
      Arch: NATHVM64
    i2.2xlarge:
      Arch: NATHVM64
    i2.4xlarge:
      Arch: NATHVM64
    i2.8xlarge:
      Arch: NATHVM64
    d2.xlarge:
      Arch: NATHVM64
    d2.2xlarge:
      Arch: NATHVM64
    d2.4xlarge:
      Arch: NATHVM64
    d2.8xlarge:
      Arch: NATHVM64
    hi1.4xlarge:
      Arch: NATHVM64
    hs1.8xlarge:
      Arch: NATHVM64
    cr1.8xlarge:
      Arch: NATHVM64
    cc2.8xlarge:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    us-east-1:
      PV64: ami-2a69aa47
      HVM64: ami-6869aa05
      HVMG2: ami-61e27177
    us-west-2:
      PV64: ami-7f77b31f
      HVM64: ami-7172b611
      HVMG2: ami-60aa3700
    us-west-1:
      PV64: ami-a2490dc2
      HVM64: ami-31490d51
      HVMG2: ami-4b694d2b
    eu-west-1:
      PV64: ami-4cdd453f
      HVM64: ami-f9dd458a
      HVMG2: ami-2955524f
    eu-west-2:
      PV64: NOT_SUPPORTED
      HVM64: ami-886369ec
      HVMG2: NOT_SUPPORTED
    eu-central-1:
      PV64: ami-6527cf0a
      HVM64: ami-ea26ce85
      HVMG2: ami-81ac71ee
    ap-northeast-1:
      PV64: ami-3e42b65f
      HVM64: ami-374db956
      HVMG2: ami-46220c21
    ap-northeast-2:
      PV64: NOT_SUPPORTED
      HVM64: ami-2b408b45
      HVMG2: NOT_SUPPORTED
    ap-southeast-1:
      PV64: ami-df9e4cbc
      HVM64: ami-a59b49c6
      HVMG2: ami-c212aba1
    ap-southeast-2:
      PV64: ami-63351d00
      HVM64: ami-dc361ebf
      HVMG2: ami-0ad2db69
    ap-south-1:
      PV64: NOT_SUPPORTED
      HVM64: ami-ffbdd790
      HVMG2: ami-ca3042a5
    us-east-2:
      PV64: NOT_SUPPORTED
      HVM64: ami-f6035893
      HVMG2: NOT_SUPPORTED
    ca-central-1:
      PV64: NOT_SUPPORTED
      HVM64: ami-730ebd17
      HVMG2: NOT_SUPPORTED
    sa-east-1:
      PV64: ami-1ad34676
      HVM64: ami-6dd04501
      HVMG2: NOT_SUPPORTED
    cn-north-1:
      PV64: ami-77559f1a
      HVM64: ami-8e6aa0e3
      HVMG2: NOT_SUPPORTED
  RegionMap: 
    us-east-1: 
      RedshiftInboundTraffic: 52.70.63.192/27
    us-east-2:
      RedshiftInboundTraffic: 13.58.135.96/27
    us-west-2:
      RedshiftInboundTraffic: 52.89.255.224/27
    us-west-1:
      RedshiftInboundTraffic: 13.57.135.192/27
    eu-central-1:
      RedshiftInboundTraffic: 35.158.127.160/27
    ca-central-1:
      RedshiftInboundTraffic: 35.183.92.128/27
    eu-west-1:
      RedshiftInboundTraffic: 52.19.239.192/27
    eu-west-2:
      RedshiftInboundTraffic: 18.130.1.96/27
    eu-west-3:
      RedshiftInboundTraffic: 35.180.1.96/27
    ap-southeast-1:
      RedshiftInboundTraffic: 13.228.64.192/27
    ap-southeast-2:
      RedshiftInboundTraffic: 13.210.67.224/27
    ap-northeast-1:
      RedshiftInboundTraffic: 13.113.196.224/27
    ap-northeast-2:
      RedshiftInboundTraffic: 13.209.1.64/27
    ap-south-1:
      RedshiftInboundTraffic: 13.232.67.32/27
    sa-east-1:
      RedshiftInboundTraffic: 18.228.1.128/27
      
Conditions:
  IsMultiNodeCluster:
    Fn::Equals:
    - Ref: ClusterType
    - multi-node
  EncryptData: !Equals
    - !Ref 'EncryptData'
    - 'yes'
  NoEncryption: !Equals
    - !Ref 'EncryptData'
    - 'no'
  isDemos: !Equals
    - !Ref 'isDemo'
    - 'yes'
  isDemon: !Equals
    - !Ref 'isDemo'
    - 'no'
  HasDedicatedMasterNodes: !Not [!Equals [!Ref DedicatedMasterCount, 0]]
  HasSingleClusterInstance: !Equals [!Ref ESClusterInstanceCount, '1']


Resources:

  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Sub: https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template
      Parameters:
        AvailabilityZones:
          Fn::Join:
          - ','
          - Ref: AvailabilityZones
        KeyPairName:
          Ref: KeyPairName
        NumberOfAZs: '2'
        PrivateSubnet1ACIDR:
          Ref: PrivateSubnet1CIDR
        PrivateSubnet2ACIDR:
          Ref: PrivateSubnet2CIDR
        PublicSubnet1CIDR:
          Ref: PublicSubnet1CIDR
        PublicSubnet2CIDR:
          Ref: PublicSubnet2CIDR
        VPCCIDR:
          Ref: VPCCIDR
          
  BastionStack:
    DependsOn: VPCStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Sub: https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template
      Parameters:
        BastionAMIOS:
          Ref: BastionAMIOS
        BastionInstanceType:
          Ref: BastionInstanceType
        KeyPairName:
          Ref: KeyPairName
        PublicSubnet1ID:
          Fn::GetAtt:
          - VPCStack
          - Outputs.PublicSubnet1ID
        PublicSubnet2ID:
          Fn::GetAtt:
          - VPCStack
          - Outputs.PublicSubnet2ID
        QSS3BucketName:
          Ref: QSS3BucketName
        QSS3KeyPrefix:
          Fn::Sub: ${QSS3KeyPrefix}submodules/quickstart-linux-bastion/
        RemoteAccessCIDR:
          Ref: RemoteAccessCIDR
        VPCID:
          Fn::GetAtt:
          - VPCStack
          - Outputs.VPCID          

  AppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: HTTP Access to VPC CidrBlock
      VpcId:
        Fn::GetAtt:
        - VPCStack
        - Outputs.VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          SourceSecurityGroupId: !Ref PublicLoadBalancerSG
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          SourceSecurityGroupId: !GetAtt BastionStack.Outputs.BastionSecurityGroupID
  AppInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref 'AppRole'
  AppPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AppPolicy
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - "firehose:DeleteDeliveryStream"
              - "firehose:PutRecord"
              - "firehose:PutRecordBatch"
              - "firehose:UpdateDestination"
            Resource: '*'
          - Effect: Allow
            Action:
              - "cloudwatch:PutMetricData"
            Resource: '*'
          - Effect: Allow
            Action:
              - "s3:AbortMultipartUpload"
              - "s3:GetBucketLocation"
              - "s3:Get*"
              - "s3:ListBucket"
              - "s3:ListBucketMultipartUploads"
              - "s3:Put*"
              - "s3:GetBucketAcl"
              - "s3:ListAllMyBuckets"
            Resource: '*'
          - Effect: Allow
            Action:
              - "cloudformation:DescribeStackResource"
              - "cloudformation:SignalResource"
            Resource: '*'
          - Effect: Allow
            Action:
              - "sts:AssumeRole"
            Resource: '*'
      Roles:
        - !Ref 'AppRole'
  AppRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
  EncryptionKey:
    Type: AWS::KMS::Key
    Condition: EncryptData
    Properties:
      Description: KMS key generated to encrypt aggregated Kinesis Analytics data.
      EnableKeyRotation: 'true'
      KeyPolicy:
        Id: KMS key policy
        Version: '2012-10-17'
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS:
                - !Join
                  - ''
                  - - 'arn:aws:iam::'
                    - !Ref 'AWS::AccountId'
                    - :root
            Action: kms:*
            Resource: '*'
          - Sid: Allow access for Key Administrators
            Effect: Allow
            Principal:
              AWS:
                - !Join
                  - ''
                  - - 'arn:aws:iam::'
                    - !Ref 'AWS::AccountId'
                    - :root
            Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
            Resource: '*'
          - Sid: Allow use of the key
            Effect: Allow
            Principal:
              AWS:
                - !Join
                  - ''
                  - - 'arn:aws:iam::'
                    - !Ref 'AWS::AccountId'
                    - :root
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: '*'
          - Sid: Allow attachment of persistent resources
            Effect: Allow
            Principal:
              AWS:
                - !Join
                  - ''
                  - - 'arn:aws:iam::'
                    - !Ref 'AWS::AccountId'
                    - :root
            Action:
              - kms:CreateGrant
              - kms:ListGrants
              - kms:RevokeGrant
            Resource: '*'
            Condition:
              Bool:
                kms:GrantIsForAWSResource: true
  KMSAlias:
    Type: AWS::KMS::Alias
    Condition: EncryptData
    Properties:
      AliasName: !Join
        - ''
        - - alias/key-
          - !Ref 'AWS::StackName'
      TargetKeyId: !GetAtt 'EncryptionKey.Arn'
  StreamingAnalyticsBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: "Enabled"
    DeletionPolicy: Retain
  FIrehoseToS3Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - firehose.amazonaws.com
            Action:
              - sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Ref 'AWS::AccountId'
      Policies:
        - PolicyName: !Join
            - ''
            - - Firehose-to-S3-Delivery-
              - !Ref 'AWS::StackName'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: ''
                Effect: Allow
                Action:
                  - s3:AbortMultipartUpload
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                  - s3:PutObject
                Resource:
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref 'StreamingAnalyticsBucket'
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref 'StreamingAnalyticsBucket'
                      - /*
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Resource:
                  - !If
                    - NoEncryption
                    - !Join
                      - ''
                      - - 'arn:aws:kms:'
                        - !Ref 'AWS::Region'
                        - ':'
                        - !Ref 'AWS::AccountId'
                        - :key/placeholder-kms-id
                    - !GetAtt 'EncryptionKey.Arn'
                Condition:
                  StringEquals:
                    kms:ViaService: !Join
                      - ''
                      - - s3.
                        - !Ref 'AWS::Region'
                        - .amazonaws.com
                  StringLike:
                    kms:EncryptionContext:aws:s3:arn: !Join
                      - ''
                      - - 'arn:aws:s3:::'
                        - !Ref 'StreamingAnalyticsBucket'
                        - /
                        - !Ref 'S3DestinationPrefix'
                        - /*
              - Sid: ''
                Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - '*'
  FIrehoseToS3:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      S3DestinationConfiguration:
        BucketARN: !Join
          - ''
          - - 'arn:aws:s3:::'
            - !Ref 'StreamingAnalyticsBucket'
        BufferingHints:
          IntervalInSeconds: !Ref 'S3BufferInterval'
          SizeInMBs: !Ref 'S3BufferSize'
        CloudWatchLoggingOptions: 
          Enabled: true
          LogGroupName: !Ref S3CloudwatchLogsGroup
          LogStreamName: !Ref S3LogStream
        CompressionFormat: UNCOMPRESSED
        EncryptionConfiguration:
          KMSEncryptionConfig: !If
            - NoEncryption
            - !Ref 'AWS::NoValue'
            - AWSKMSKeyARN: !GetAtt 'EncryptionKey.Arn'
          NoEncryptionConfig: !If
            - NoEncryption
            - NoEncryption
            - !Ref 'AWS::NoValue'
        Prefix: !Join
          - ''
          - - !Ref 'S3DestinationPrefix'
            - /
        RoleARN: !GetAtt 'FIrehoseToS3Role.Arn'
  esroleforsl:
    Type: "AWS::IAM::ServiceLinkedRole"
    Properties:
      AWSServiceName: "es.amazonaws.com"
      Description: "ElasticsearchServiceLinkCreate"
  ESDomain:
    Type: AWS::Elasticsearch::Domain
    Properties:
      ElasticsearchVersion: !Ref ESVersion
      ElasticsearchClusterConfig:      
        DedicatedMasterEnabled: !If [HasDedicatedMasterNodes, true, false]
        InstanceCount: !Ref ESClusterInstanceCount
        ZoneAwarenessEnabled: !If [HasSingleClusterInstance, false, true]
        InstanceType: !Ref ESInstanceType
        DedicatedMasterType: !If [HasDedicatedMasterNodes, !Ref DedicatedMasterType, !Ref 'AWS::NoValue']
        DedicatedMasterCount: !If [HasDedicatedMasterNodes, !Ref DedicatedMasterCount, !Ref 'AWS::NoValue']
      EBSOptions:
        EBSEnabled: 'true'
        Iops: !Ref IOPS
        VolumeSize: !Ref VolumeSize
        VolumeType: !Ref VolumeType
      SnapshotOptions:
        AutomatedSnapshotStartHour: !Ref AutomatedSnapshotStartHour
      AccessPolicies:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: '*'
            Action: 'es:*'
            Resource: '*'
      AdvancedOptions:
        rest.action.multi.allow_explicit_index: 'true'
        indices.fielddata.cache.size: 100
        indices.query.bool.max_clause_count: 1024
  ElasticSearchDeliveryRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - firehose.amazonaws.com
            Action:
              - sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Ref 'AWS::AccountId'
      Policies:
        - PolicyName: !Join
            - ''
            - - Firehose-to-ElasticSearch-Delivery-
              - !Ref 'AWS::StackName'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: ''
                Effect: Allow
                Action:
                  - s3:AbortMultipartUpload
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                  - s3:PutObject
                Resource:
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref 'StreamingAnalyticsBucket'
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref 'StreamingAnalyticsBucket'
                      - /*
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Resource:
                  - !If
                    - NoEncryption
                    - !Join
                      - ''
                      - - 'arn:aws:kms:'
                        - !Ref 'AWS::Region'
                        - ':'
                        - !Ref 'AWS::AccountId'
                        - :key/placeholder-kms-id
                    - !GetAtt 'EncryptionKey.Arn'
                Condition:
                  StringEquals:
                    kms:ViaService: !Join
                      - ''
                      - - s3.
                        - !Ref 'AWS::Region'
                        - .amazonaws.com
                  StringLike:
                    kms:EncryptionContext:aws:s3:arn: !Join
                      - ''
                      - - 'arn:aws:s3:::'
                        - !Ref 'StreamingAnalyticsBucket'
                        - /ESDeliveryBackup/*
              - Sid: ''
                Effect: Allow
                Action:
                  - es:DescribeElasticsearchDomain
                  - es:DescribeElasticsearchDomains
                  - es:DescribeElasticsearchDomainConfig
                  - es:ESHttpPost
                  - es:ESHttpPut
                Resource:
                  - !Join
                    - ''
                    - - 'arn:aws:es:'
                      - !Ref 'AWS::Region'
                      - ':'
                      - !Ref 'AWS::AccountId'
                      - :domain/
                      - !Ref 'ESDomain'
                  - !Join
                    - ''
                    - - 'arn:aws:es:'
                      - !Ref 'AWS::Region'
                      - ':'
                      - !Ref 'AWS::AccountId'
                      - :domain/
                      - !Ref 'ESDomain'
                      - /*
              - Sid: ''
                Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - '*'
  FIrehoseToElasticsearch:
    Type: AWS::KinesisFirehose::DeliveryStream
    DependsOn: ElasticSearchDeliveryRole
    Properties:
      ElasticsearchDestinationConfiguration:
        BufferingHints:
          IntervalInSeconds: !Ref 'ESBufferInterval'
          SizeInMBs: !Ref 'ESBufferSize'
        CloudWatchLoggingOptions: 
          Enabled: true
          LogGroupName: !Ref ESCloudwatchLogsGroup
          LogStreamName: !Ref ESLogStream
        DomainARN: !Join
          - ''
          - - 'arn:aws:es:'
            - !Ref 'AWS::Region'
            - ':'
            - !Ref 'AWS::AccountId'
            - :domain/
            - !Ref 'ESDomain'
        IndexName: !Ref 'ESIndex'
        IndexRotationPeriod: !Ref 'ESIndexRotation'
        RetryOptions:
          DurationInSeconds: 300
        RoleARN: !GetAtt 'ElasticSearchDeliveryRole.Arn'
        S3BackupMode: AllDocuments
        S3Configuration:
          BucketARN: !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref 'StreamingAnalyticsBucket'
          BufferingHints:
            IntervalInSeconds: !Ref 'ESBufferInterval'
            SizeInMBs: !Ref 'ESBufferSize'
          CompressionFormat: UNCOMPRESSED
          EncryptionConfiguration:
            KMSEncryptionConfig: !If
              - NoEncryption
              - !Ref 'AWS::NoValue'
              - AWSKMSKeyARN: !GetAtt 'EncryptionKey.Arn'
            NoEncryptionConfig: !If
              - NoEncryption
              - NoEncryption
              - !Ref 'AWS::NoValue'
          Prefix: ESDeliveryBackup/
          RoleARN: !GetAtt 'ElasticSearchDeliveryRole.Arn'
        TypeName: !Ref 'ESType'
  RedshiftCluster:
    Type: AWS::Redshift::Cluster
    DependsOn: RedshiftDeliveryRole
    Properties:
      ClusterType: !Ref ClusterType
      NumberOfNodes:
        Fn::If:
        - IsMultiNodeCluster
        - Ref: NumberOfNodes
        - Ref: AWS::NoValue
      NodeType:
        Ref: NodeType
      DBName:
        Ref: DatabaseName
      IamRoles:
        - !GetAtt RedshiftDeliveryRole.Arn
      MasterUsername:
        Ref: MasterUser
      MasterUserPassword:
        Ref: MasterUserPassword
      ClusterParameterGroupName:
        Ref: RedshiftClusterParameterGroup
      VpcSecurityGroupIds:
      - Ref: RSDefaultSG
      ClusterSubnetGroupName:
        Ref: RedshiftClusterSubnetGroup
      PubliclyAccessible: 'true'
      Port:
        Ref: RedshiftPortNumber
  RedshiftClusterParameterGroup:
    Type: AWS::Redshift::ClusterParameterGroup
    Properties:
      Description: Cluster parameter group
      ParameterGroupFamily: redshift-1.0
      Parameters:
      - ParameterName: enable_user_activity_logging
        ParameterValue: 'true'
  RedshiftClusterSubnetGroup:
    Type: AWS::Redshift::ClusterSubnetGroup
    Properties:
      Description: Cluster subnet group
      SubnetIds: 
        - !GetAtt VPCStack.Outputs.PublicSubnet1ID
        - !GetAtt VPCStack.Outputs.PublicSubnet2ID
        
  RSDefaultSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RSSecurity group
      SecurityGroupIngress:
      - CidrIp: !FindInMap
               - RegionMap
               - !Ref 'AWS::Region'
               - RedshiftInboundTraffic
        FromPort:
          Ref: RedshiftPortNumber
        ToPort:
          Ref: RedshiftPortNumber
        IpProtocol: tcp
        Description: Kinesis Data Firehose CIDR block 
      - CidrIp: !Ref RemoteAccessCIDR
        FromPort:
          Ref: RedshiftPortNumber
        ToPort:
          Ref: RedshiftPortNumber
        IpProtocol: tcp
      - CidrIp: !Ref RemoteAccessCIDR
        FromPort:
          Ref: RedshiftPortNumber
        ToPort:
          Ref: RedshiftPortNumber
        IpProtocol: tcp
      - IpProtocol: tcp
        FromPort:
          Ref: RedshiftPortNumber
        ToPort:
          Ref: RedshiftPortNumber
        SourceSecurityGroupId: !Ref AppSecurityGroup
        Description: App Security Group
      VpcId:
        Fn::GetAtt:
        - VPCStack
        - Outputs.VPCID
  RedshiftDeliveryRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - firehose.amazonaws.com
                - redshift.amazonaws.com
            Action:
              - sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Ref 'AWS::AccountId'
      Policies:
        - PolicyName: !Join
            - ''
            - - Redshift-Delivery-
              - !Ref 'AWS::StackName'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: ''
                Effect: Allow
                Action:
                  - s3:AbortMultipartUpload
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                  - s3:PutObject
                  - s3:GetBucketAcl
                  - s3:ListAllMyBuckets
                Resource:
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref 'StreamingAnalyticsBucket'
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref 'StreamingAnalyticsBucket'
                      - /*
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Resource:
                  - !If
                    - NoEncryption
                    - !Join
                      - ''
                      - - 'arn:aws:kms:'
                        - !Ref 'AWS::Region'
                        - ':'
                        - !Ref 'AWS::AccountId'
                        - :key/placeholder-kms-id
                    - !GetAtt 'EncryptionKey.Arn'
                Condition:
                  StringEquals:
                    kms:ViaService: !Join
                      - ''
                      - - s3.
                        - !Ref 'AWS::Region'
                        - .amazonaws.com
                  StringLike:
                    kms:EncryptionContext:aws:s3:arn: !Join
                      - ''
                      - - 'arn:aws:s3:::'
                        - !Ref 'StreamingAnalyticsBucket'
                        - /RedshiftDelivery/*
              - Sid: ''
                Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - '*'
              - Sid: ''
                Effect: Allow
                Action:
                  - kinesis:Get*
                  - kinesis:Describe*
                  - lambda:InvokeFunction
                  - lambda:GetFunctionConfiguration
                  - glue:*
                  - cloudwatch:Get*
                  - cloudwatch:List*
                  - redshift:Describe*
                  - redshift:ModifyClusterIamRoles
                  - redshift:CreateCluster
                  - iam:List*
                  - iam:Get*
                  - ec2:Describe*
                  - cloudformation:DescribeStacks
                  - cloudformation:GetTemplateSummary
                Resource:
                  - '*'
  FIrehoseToRedshift:
    Type: AWS::KinesisFirehose::DeliveryStream
    DependsOn: RedshiftDeliveryRole
    Properties:
      RedshiftDestinationConfiguration:
        ClusterJDBCURL: !Sub "jdbc:redshift://${RedshiftCluster.Endpoint.Address}:${RedshiftCluster.Endpoint.Port}/${DatabaseName}"
        CopyCommand:
          CopyOptions: TIMEFORMAT 'auto' json 'auto' EMPTYASNULL ACCEPTINVCHARS ACCEPTANYDATE IGNOREHEADER AS 1
          DataTableName: !Ref 'RedshiftTableName'
        Password: !Ref 'MasterUserPassword'
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Ref RSCloudwatchLogsGroup
          LogStreamName: !Ref RSLogStream
        RoleARN: !GetAtt 'RedshiftDeliveryRole.Arn'
        S3Configuration:
          BucketARN: !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref 'StreamingAnalyticsBucket'
          RoleARN: !GetAtt 'RedshiftDeliveryRole.Arn'
          BufferingHints:
            IntervalInSeconds: !Ref 'RedshiftBufferInterval'
            SizeInMBs: !Ref 'RedshiftBufferSize'
          CompressionFormat: UNCOMPRESSED
          EncryptionConfiguration:
            KMSEncryptionConfig: !If
              - NoEncryption
              - !Ref 'AWS::NoValue'
              - AWSKMSKeyARN: !GetAtt 'EncryptionKey.Arn'
            NoEncryptionConfig: !If
              - NoEncryption
              - NoEncryption
              - !Ref 'AWS::NoValue'
          Prefix: RedshiftDelivery/
        Username: !Ref 'MasterUser'
        
  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref 'OperatorEMail'
          Protocol: email
  AppServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Condition: isDemon
    DependsOn: RedshiftCluster
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
        Count: '2'
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: '1'
        MinInstancesInService: '1'
        PauseTime: PT15M
        WaitOnResourceSignals: 'true'
    Properties:
      VPCZoneIdentifier: 
        - !GetAtt VPCStack.Outputs.PrivateSubnet1AID
        - !GetAtt VPCStack.Outputs.PrivateSubnet2AID
      LaunchConfigurationName: !Ref 'LaunchConfig'
      MinSize: '2'
      MaxSize: '4'
      TargetGroupARNs:
        - !Ref TargetGroupPublic
      NotificationConfiguration:
        TopicARN: !Ref 'NotificationTopic'
        NotificationTypes:
          - autoscaling:EC2_INSTANCE_LAUNCH
          - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
          - autoscaling:EC2_INSTANCE_TERMINATE
          - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-AppServer
          PropagateAtLaunch: 'true'
  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Condition: isDemon
    Metadata:
      Comment: Install Apache WebServer
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd: []
          files:
            /var/www/html/index.html:
              content: !Join
                - ''
                - - '<h1>Congratulations, you have successfully launched the AWS CloudFormation Clickstream Analytics sample.</h1>'
              mode: '000644'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Join
                - ''
                - - "[main]\n"
                  - stack=
                  - !Ref 'AWS::StackId'
                  - "\n"
                  - region=
                  - !Ref 'AWS::Region'
                  - "\n"
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join
                - ''
                - - "[cfn-auto-reloader-hook]\n"
                  - "triggers=post.update\n"
                  - "path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init\n"
                  - 'action=/opt/aws/bin/cfn-init -v '
                  - '         --stack '
                  - !Ref 'AWS::StackName'
                  - '         --resource LaunchConfig '
                  - '         --region '
                  - !Ref 'AWS::Region'
                  - "\n"
                  - "runas=root\n"
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf        
          commands:
            redshift_cmd:
              command: !Sub |
                #!/bin/bash
                /usr/bin/sudo yum groupinstall -y "Development Tools"
                /usr/bin/sudo yum install -y postgresql-devel
                /usr/bin/sudo yum install -y postgresql-server
                /usr/bin/sudo /sbin/service postgresql initdb
                /usr/bin/sudo /etc/init.d/postgresql start
                export PGPASSWORD='${MasterUserPassword}' && psql -h ${RedshiftCluster.Endpoint.Address} -U ${MasterUser} -d ${DatabaseName} -p ${RedshiftCluster.Endpoint.Port} PGPASSWORD -c 'create schema if not exists apache_logs;'
                export PGPASSWORD='${MasterUserPassword}' && psql -h ${RedshiftCluster.Endpoint.Address} -U ${MasterUser} -d ${DatabaseName} -p ${RedshiftCluster.Endpoint.Port} PGPASSWORD -c 'create table apache_logs.access_logs (HOST VARCHAR(1000), IDENT VARCHAR(1000), AUTHUSER VARCHAR(1000), DATETIME TIMESTAMP, REQUEST VARCHAR(4000), RESPONSE VARCHAR(4000), BYTES VARCHAR(4000));'
                /usr/bin/sudo yum install -y aws-kinesis-agent
                /usr/bin/sudo /bin/chown -R aws-kinesis-agent-user:aws-kinesis-agent-user /var/log/httpd/
                /usr/bin/sudo /bin/mv /etc/aws-kinesis/agent.json /etc/aws-kinesis/agent.orig
                /usr/bin/sudo /bin/sh -c '/bin/cat >/etc/aws-kinesis/agent.json <<EOL
                {
                      "cloudwatch.emitMetrics": true,
                      "firehose.endpoint": "https://firehose.${AWS::Region}.amazonaws.com",
                      "kinesis.endpoint": "https://kinesis.${AWS::Region}.amazonaws.com",

                      "flows": [
                    {
                      "filePattern": "/var/log/httpd/access_log",
                      "initialPosition": "END_OF_FILE",
                      "deliveryStream": "${FIrehoseToRedshift}",
                      "dataProcessingOptions": [
                    {
                      "optionName": "LOGTOJSON",
                      "logFormat": "COMMONAPACHELOG"
                  }
                  ]
                  },
                  {
                      "filePattern": "/var/log/httpd/access_log",
                      "initialPosition": "END_OF_FILE",
                      "deliveryStream": "${FIrehoseToElasticsearch}",
                      "dataProcessingOptions": [
                    {
                      "optionName": "LOGTOJSON",
                      "logFormat": "COMMONAPACHELOG"
                  }
                  ]
                  }
                  ]
                }
                EOL'
                /usr/bin/sudo /sbin/service aws-kinesis-agent start
                /usr/bin/sudo /sbin/chkconfig aws-kinesis-agent on
                /usr/bin/sudo service httpd restart
    Properties:
      KeyName: !Ref 'AppKeyPairName'
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap
          - InstanceType2Arch
          - !Ref 'AppInstanceType'
          - Arch
      SecurityGroups:
        - !Ref 'AppSecurityGroup'
      IamInstanceProfile: !Ref 'AppInstanceProfile'
      InstanceType: !Ref 'AppInstanceType'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "#!/bin/bash -xe\n"
            - "yum update -y aws-cfn-bootstrap\n"
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource LaunchConfig '
            - '         --region '
            - !Ref 'AWS::Region'
            - "\n"
            - '/opt/aws/bin/cfn-signal -e $? '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource AppServerGroup '
            - '         --region '
            - !Ref 'AWS::Region'
            - "\n"
  AppServerGroupisDemos:
    Type: AWS::AutoScaling::AutoScalingGroup
    Condition: isDemos
    DependsOn: RedshiftCluster
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
        Count: '2'
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: '1'
        MinInstancesInService: '1'
        PauseTime: PT15M
        WaitOnResourceSignals: 'true'
    Properties:
      VPCZoneIdentifier: 
        - !GetAtt VPCStack.Outputs.PrivateSubnet1AID
        - !GetAtt VPCStack.Outputs.PrivateSubnet2AID
      LaunchConfigurationName: !Ref 'LaunchConfigisDemos'
      MinSize: '2'
      MaxSize: '4'
      TargetGroupARNs:
        - !Ref TargetGroupPublic
      NotificationConfiguration:
        TopicARN: !Ref 'NotificationTopic'
        NotificationTypes:
          - autoscaling:EC2_INSTANCE_LAUNCH
          - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
          - autoscaling:EC2_INSTANCE_TERMINATE
          - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-AppServer
          PropagateAtLaunch: 'true'          
  LaunchConfigisDemos:
    Type: AWS::AutoScaling::LaunchConfiguration
    Condition: isDemos
    Metadata:
      Comment: Install Apache WebServer
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd: []
          files:
            /var/www/html/index.html:
              content: !Join
                - ''
                - - '<h1>Congratulations, you have successfully launched the AWS CloudFormation Clickstream Analytics sample.</h1>'
              mode: '000644'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Join
                - ''
                - - "[main]\n"
                  - stack=
                  - !Ref 'AWS::StackId'
                  - "\n"
                  - region=
                  - !Ref 'AWS::Region'
                  - "\n"
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join
                - ''
                - - "[cfn-auto-reloader-hook]\n"
                  - "triggers=post.update\n"
                  - "path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init\n"
                  - 'action=/opt/aws/bin/cfn-init -v '
                  - '         --stack '
                  - !Ref 'AWS::StackName'
                  - '         --resource LaunchConfigisDemos '
                  - '         --region '
                  - !Ref 'AWS::Region'
                  - "\n"
                  - "runas=root\n"
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
          commands:
            kinesis_agent_cmd:
              command: !Sub |
                #!/bin/bash -x
                /usr/bin/sudo yum install -y aws-kinesis-agent
                /usr/bin/sudo /bin/chown -R aws-kinesis-agent-user:aws-kinesis-agent-user /var/log/httpd/
                /usr/bin/sudo /bin/mv /etc/aws-kinesis/agent.json /etc/aws-kinesis/agent.orig
                /usr/bin/sudo /bin/sh -c '/bin/cat >/etc/aws-kinesis/agent.json <<EOL
                {
                      "cloudwatch.emitMetrics": true,
                      "firehose.endpoint": "https://firehose.${AWS::Region}.amazonaws.com",
                      "kinesis.endpoint": "https://kinesis.${AWS::Region}.amazonaws.com",
                      "flows": [
                   {
                      "filePattern": "/var/log/demodata/GADemoData.csv",
                      "initialPosition": "START_OF_FILE",
                      "deliveryStream": "${FIrehoseToElasticsearch}",
                      "dataProcessingOptions": [
                    {
                      "optionName": "CSVTOJSON",
                      "customFieldNames": [ "City", "Country/Region", "Date", "Number of Records", "Section", "Time on Page", "Total Downloads", "Unique", "Exits", "Date", "Medium", "Page", "Pageviews", "Visitors", "Visits" ],
                      "delimiter": "\\t"
                    }
                    ]
                    },
                    {
                      "filePattern": "/var/log/demodata/Schematic_Log.csv",
                      "initialPosition": "START_OF_FILE",
                      "deliveryStream": "${FIrehoseToElasticsearch}",
                      "dataProcessingOptions": [
                    {
                      "optionName": "CSVTOJSON",
                      "customFieldNames": [ "Action", "Bytes", "Item ", "# Of Purchases", "Response", "Pct_Purchase", "# Of Views", "Brand", "Clickhere", "ClientIP", "ItemID", "Number of Records", "Rbytes", "Rstat", "SessionID", "TimeStamp", "URL" ],
                      "delimiter": "\\t"
                    }
                    ]
                    },
                    {
                      "filePattern": "/var/log/httpd/access_log",
                      "initialPosition": "END_OF_FILE",
                      "deliveryStream": "${FIrehoseToRedshift}",
                      "dataProcessingOptions": [
                    {
                      "optionName": "LOGTOJSON",
                      "logFormat": "COMMONAPACHELOG"
                  }
                  ]
                  },
                  {
                      "filePattern": "/var/log/httpd/access_log",
                      "initialPosition": "END_OF_FILE",
                      "deliveryStream": "${FIrehoseToElasticsearch}",
                      "dataProcessingOptions": [
                    {
                      "optionName": "LOGTOJSON",
                      "logFormat": "COMMONAPACHELOG"
                   }
                   ]
                   }
                   ]
                 }
                 EOL'
                /usr/bin/sudo /sbin/service aws-kinesis-agent restart
                /usr/bin/sudo /sbin/chkconfig aws-kinesis-agent on
                /usr/bin/sudo service httpd restart
    Properties:
      KeyName: !Ref 'AppKeyPairName'
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap
          - InstanceType2Arch
          - !Ref 'AppInstanceType'
          - Arch
      SecurityGroups:
        - !Ref 'AppSecurityGroup'
      IamInstanceProfile: !Ref 'AppInstanceProfile'
      InstanceType: !Ref 'AppInstanceType'
      UserData: 
        Fn::Base64: 
          !Sub |
          #!/bin/bash -x
          yum update -y aws-cfn-bootstrap
          /usr/bin/sudo /usr/bin/pip install --upgrade awscli
          /usr/bin/sudo yum groupinstall -y "Development Tools"
          /usr/bin/sudo yum install -y jq
          /usr/bin/sudo yum install -y postgresql-devel
          /usr/bin/sudo yum install -y postgresql-server
          /usr/bin/sudo /sbin/service postgresql initdb
          /usr/bin/sudo /etc/init.d/postgresql restart
          /usr/bin/sudo mkdir -p /var/log/demodata
          /usr/bin/wget https://s3-us-west-2.amazonaws.com/ctepoc-clickctream-dataset/OtherClickStreamDataSets/GADemoData.csv
          /usr/bin/wget https://s3-us-west-2.amazonaws.com/ctepoc-clickctream-dataset/OtherClickStreamDataSets/Schematic_Log.csv
          /usr/bin/sudo /bin/mv ./GADemoData.csv ./Schematic_Log.csv /var/log/demodata
          /usr/bin/aws s3 sync /var/log/demodata/ s3://${StreamingAnalyticsBucket}/demodata --acl public-read
          /usr/bin/sudo /bin/chown -R aws-kinesis-agent-user:aws-kinesis-agent-user /var/log/demodata/
          source <(aws sts assume-role --role-arn arn:aws:iam::${AWS::AccountId}:role/${AppRole} --role-session-name "QuickStart" --duration-seconds 1900 | jq -r  '.Credentials | @sh "export AWS_SESSION_TOKEN=\(.SessionToken)\nexport AWS_ACCESS_KEY_ID=\(.AccessKeyId)\nexport AWS_SECRET_ACCESS_KEY=\(.SecretAccessKey) "')
          export PGPASSWORD='${MasterUserPassword}'
          psql -h ${RedshiftCluster.Endpoint.Address} -U ${MasterUser} -d ${DatabaseName} -p ${RedshiftCluster.Endpoint.Port} PGPASSWORD -c 'create schema if not exists apache_logs;'
          psql -h ${RedshiftCluster.Endpoint.Address} -U ${MasterUser} -d ${DatabaseName} -p ${RedshiftCluster.Endpoint.Port} PGPASSWORD -c 'create schema if not exists clickstream_demo;'
          psql -h ${RedshiftCluster.Endpoint.Address} -U ${MasterUser} -d ${DatabaseName} -p ${RedshiftCluster.Endpoint.Port} PGPASSWORD -c 'create table apache_logs.access_logs (HOST VARCHAR(1000), IDENT VARCHAR(1000), AUTHUSER VARCHAR(1000), DATETIME TIMESTAMP, REQUEST VARCHAR(4000), RESPONSE VARCHAR(4000), BYTES VARCHAR(4000));'
          psql -h ${RedshiftCluster.Endpoint.Address} -U ${MasterUser} -d ${DatabaseName} -p ${RedshiftCluster.Endpoint.Port} PGPASSWORD -c 'create table clickstream_demo.schematic_log(action varchar(100), bytes integer, item varchar(1000), number_of_purchases integer, response varchar(100), pct_purchase numeric(8,2), number_of_views integer, brand varchar(1000), clickhere varchar(1000), category varchar(1000), clientip varchar(1000), itemid varchar(1000), msg varchar(1000), number_of_records integer, productid varchar(1000), rbytes integer, rstat integer, serverip varchar(1000), sessionid varchar(1000), timestamp timestamp, url varchar(2000));'
          psql -h ${RedshiftCluster.Endpoint.Address} -U ${MasterUser} -d ${DatabaseName} -p ${RedshiftCluster.Endpoint.Port} PGPASSWORD -c 'create table clickstream_demo.ga_demo_data(city varchar(100), country_region varchar(1000), date date, exits integer,medium varchar(1000), number_of_records integer, page varchar(1000), pageviews integer, section varchar(1000), time_on_page integer, total_downloads integer, unique_visitors integer, visits integer);'
          psql -h ${RedshiftCluster.Endpoint.Address} -U ${MasterUser} -d ${DatabaseName} -p ${RedshiftCluster.Endpoint.Port} PGPASSWORD -c "copy clickstream_demo.schematic_log from 's3://${StreamingAnalyticsBucket}/demodata/Schematic_Log.csv' CREDENTIALS 'aws_access_key_id=$AWS_ACCESS_KEY_ID;aws_secret_access_key=$AWS_SECRET_ACCESS_KEY;token=$AWS_SESSION_TOKEN' delimiter ',' EMPTYASNULL ACCEPTINVCHARS ACCEPTANYDATE IGNOREHEADER AS 1;"
          psql -h ${RedshiftCluster.Endpoint.Address} -U ${MasterUser} -d ${DatabaseName} -p ${RedshiftCluster.Endpoint.Port} PGPASSWORD -c "copy clickstream_demo.ga_demo_data from 's3://${StreamingAnalyticsBucket}/demodata/GADemoData.csv' CREDENTIALS 'aws_access_key_id=$AWS_ACCESS_KEY_ID;aws_secret_access_key=$AWS_SECRET_ACCESS_KEY;token=$AWS_SESSION_TOKEN' delimiter '\t' EMPTYASNULL ACCEPTINVCHARS ACCEPTANYDATE IGNOREHEADER AS 1;"
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfigisDemos --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource AppServerGroupisDemos --region ${AWS::Region}

  AppServerScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Condition: isDemon
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref 'AppServerGroup'
      Cooldown: '60'
      ScalingAdjustment: '1'
  AppServerScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Condition: isDemon
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref 'AppServerGroup'
      Cooldown: '60'
      ScalingAdjustment: '-1'
  CPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Condition: isDemon
    Properties:
      AlarmDescription: Scale-up if CPU > 90% for 10 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '300'
      EvaluationPeriods: '2'
      Threshold: '90'
      AlarmActions:
        - !Ref 'AppServerScaleUpPolicy'
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref 'AppServerGroup'
      ComparisonOperator: GreaterThanThreshold
  CPUAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Condition: isDemon
    Properties:
      AlarmDescription: Scale-down if CPU < 70% for 10 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '300'
      EvaluationPeriods: '2'
      Threshold: '70'
      AlarmActions:
        - !Ref 'AppServerScaleDownPolicy'
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref 'AppServerGroup'
      ComparisonOperator: LessThanThreshold
  AppServerScaleUpPolicyisDemos:
    Type: AWS::AutoScaling::ScalingPolicy
    Condition: isDemos
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref 'AppServerGroupisDemos'
      Cooldown: '60'
      ScalingAdjustment: '1'
  AppServerScaleDownPolicyisDemos:
    Type: AWS::AutoScaling::ScalingPolicy
    Condition: isDemos
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref 'AppServerGroupisDemos'
      Cooldown: '60'
      ScalingAdjustment: '-1'
  CPUAlarmHighisDemos:
    Type: AWS::CloudWatch::Alarm
    Condition: isDemos
    Properties:
      AlarmDescription: Scale-up if CPU > 90% for 10 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '300'
      EvaluationPeriods: '2'
      Threshold: '90'
      AlarmActions:
        - !Ref 'AppServerScaleUpPolicyisDemos'
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref 'AppServerGroupisDemos'
      ComparisonOperator: GreaterThanThreshold
  CPUAlarmLowisDemos:
    Type: AWS::CloudWatch::Alarm
    Condition: isDemos
    Properties:
      AlarmDescription: Scale-down if CPU < 70% for 10 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '300'
      EvaluationPeriods: '2'
      Threshold: '70'
      AlarmActions:
        - !Ref 'AppServerScaleDownPolicyisDemos'
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref 'AppServerGroupisDemos'
      ComparisonOperator: LessThanThreshold
  PublicLoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Public LoadBalancer Security Group
      VpcId:
        Fn::GetAtt:
        - VPCStack
        - Outputs.VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: '0.0.0.0/0'
  PublicLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      LoadBalancerAttributes:
      - Key: idle_timeout.timeout_seconds
        Value: '30'
      Subnets:
        - !GetAtt VPCStack.Outputs.PublicSubnet1ID
        - !GetAtt VPCStack.Outputs.PublicSubnet2ID
      SecurityGroups: [!Ref 'PublicLoadBalancerSG']
  TargetGroupPublic:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Protocol: HTTP
      Port: 80
      UnhealthyThresholdCount: 2
      VpcId:
        Fn::GetAtt:
        - VPCStack
        - Outputs.VPCID
  PublicLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
      - PublicLoadBalancer
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref 'TargetGroupPublic'
          Type: 'forward'
      LoadBalancerArn: !Ref 'PublicLoadBalancer'
      Port: 80
      Protocol: HTTP
  BastionNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref 'OperatorEMail'
          Protocol: email
  KinesisAnalyticsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: kinesisanalytics.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: Open
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"
  ESCloudwatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 3653
  ESLogStream: 
    Type: AWS::Logs::LogStream
    Properties: 
      LogGroupName: !Ref ESCloudwatchLogsGroup
      LogStreamName: elasticsearch
  RSCloudwatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 3653
  RSLogStream: 
    Type: AWS::Logs::LogStream
    Properties: 
      LogGroupName: !Ref RSCloudwatchLogsGroup
      LogStreamName: redshift
  S3CloudwatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 3653
  S3LogStream: 
    Type: AWS::Logs::LogStream
    Properties: 
      LogGroupName: !Ref S3CloudwatchLogsGroup
      LogStreamName: S3
  BasicApplication1:
    Type: AWS::KinesisAnalytics::Application
    Properties:
      ApplicationDescription: "ES-SampleApp"
      ApplicationCode: "Example Application Code"
      Inputs:
        - NamePrefix: "exampleNamePrefix"
          InputSchema:
            RecordColumns:
             - Name: "example"
               SqlType: "VARCHAR(16)"
               Mapping: "$.example"
            RecordFormat:
              RecordFormatType: "JSON"
              MappingParameters:
                JSONMappingParameters:
                  RecordRowPath: "$"
          KinesisFirehoseInput:
            ResourceARN: !GetAtt FIrehoseToElasticsearch.Arn
            RoleARN: !GetAtt KinesisAnalyticsRole.Arn      
  BasicApplicationOutputs:
    Type: AWS::KinesisAnalytics::ApplicationOutput
    DependsOn: BasicApplication1
    Properties:
      ApplicationName: !Ref BasicApplication1
      Output:
        Name: "exampleOutput"
        DestinationSchema:
          RecordFormatType: "CSV"
        KinesisFirehoseOutput:
          ResourceARN: !GetAtt FIrehoseToElasticsearch.Arn
          RoleARN: !GetAtt KinesisAnalyticsRole.Arn
  BasicApplication2:
    Type: AWS::KinesisAnalytics::Application
    Properties:
      ApplicationDescription: "RS-SampleApp"
      ApplicationCode: "Example Application Code"
      Inputs:
        - NamePrefix: "exampleNamePrefix"
          InputSchema:
            RecordColumns:
             - Name: "example"
               SqlType: "VARCHAR(16)"
               Mapping: "$.example"
            RecordFormat:
              RecordFormatType: "JSON"
              MappingParameters:
                JSONMappingParameters:
                  RecordRowPath: "$"
          KinesisFirehoseInput:
            ResourceARN: !GetAtt FIrehoseToRedshift.Arn
            RoleARN: !GetAtt KinesisAnalyticsRole.Arn
  SecondBasicApplicationOutputs:
    Type: AWS::KinesisAnalytics::ApplicationOutput
    DependsOn: BasicApplication2
    Properties:
      ApplicationName: !Ref BasicApplication2
      Output:
        Name: "exampleOutput"
        DestinationSchema:
          RecordFormatType: "CSV"
        KinesisFirehoseOutput:
          ResourceARN: !GetAtt FIrehoseToRedshift.Arn
          RoleARN: !GetAtt KinesisAnalyticsRole.Arn
  BasicApplication3:
    Type: AWS::KinesisAnalytics::Application
    Properties:
      ApplicationDescription: "S3-SampleApp"
      ApplicationCode: "Example Application Code"
      Inputs:
        - NamePrefix: "exampleNamePrefix"
          InputSchema:
            RecordColumns:
             - Name: "example"
               SqlType: "VARCHAR(16)"
               Mapping: "$.example"
            RecordFormat:
              RecordFormatType: "JSON"
              MappingParameters:
                JSONMappingParameters:
                  RecordRowPath: "$"
          KinesisFirehoseInput:
            ResourceARN: !GetAtt FIrehoseToS3.Arn
            RoleARN: !GetAtt KinesisAnalyticsRole.Arn
  ThirdBasicApplicationOutputs:
    Type: AWS::KinesisAnalytics::ApplicationOutput
    DependsOn: BasicApplication3
    Properties:
      ApplicationName: !Ref BasicApplication3
      Output:
        Name: "exampleOutput"
        DestinationSchema:
          RecordFormatType: "CSV"
        KinesisFirehoseOutput:
          ResourceARN: !GetAtt FIrehoseToS3.Arn
          RoleARN: !GetAtt KinesisAnalyticsRole.Arn
Outputs:

  AppSecurityGroup:
    Value: !Ref AppSecurityGroup
  InstanceProfile:
    Value: !Ref AppInstanceProfile
  S3Bucket:
    Value: !Ref StreamingAnalyticsBucket
  S3DeliveryStream:
    Value: !Ref FIrehoseToS3
  ElasticSearchDomainName:
    Value: !Ref ESDomain
  ElasticSearchDomainEndpoint:
    Value: !GetAtt ESDomain.DomainEndpoint
  ElasticSearchDeliveryStream:
    Value: !Ref FIrehoseToElasticsearch
  RedshiftCluster:
    Value: !Ref RedshiftCluster
  RedshiftDeliveryStream:
    Value: !Ref FIrehoseToRedshift
  RedshiftJDBCURL:
    Value: !Sub "jdbc:redshift://${RedshiftCluster.Endpoint.Address}:${RedshiftCluster.Endpoint.Port}/${DatabaseName}"
  LoadBalancerSecurityGroup:
    Value: !Ref PublicLoadBalancerSG
  LoadBalancerDNS:
    Value: !GetAtt PublicLoadBalancer.DNSName
  LoadBalancerDNSEndpoint:
    Value: !Sub 'http://${PublicLoadBalancer.DNSName}'
  KinesisAnalyticsApp1:
    Value: !Ref BasicApplication1
  KinesisAnalyticsApp2:
    Value: !Ref BasicApplication2
  KinesisAnalyticsApp3:
    Value: !Ref BasicApplication3
